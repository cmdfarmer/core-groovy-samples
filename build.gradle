plugins {
    id 'groovy'
    id 'java'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.apache.groovy:groovy:4.0.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    // Apache commons
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.apache.commons:commons-pool2:2.11.1'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-jci-core:1.1'
    implementation 'org.apache.commons:commons-jci-eclipse:1.1'
    implementation 'commons-net:commons-net:3.8.0'
    implementation 'org.apache.commons:commons-compress:1.21'
    // Guava
    implementation 'com.google.guava:guava:31.1-jre'
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir 'groovy-play/src/main/java'
        }
    }
}

compileJava {
    options.incremental = true
    options.fork = true
    options.failOnError = false
}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    manifest {
        attributes "Main-Class": "com.example.scripts.uberjar.Main"
    }
}

tasks.register('uberJar', Jar) {
    archiveClassifier = 'uber'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.output
    manifest {
        attributes "Main-Class": "com.example.scripts.uberjar.Main"
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}
